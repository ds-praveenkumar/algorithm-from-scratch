# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Labeler
      uses: actions/labeler@2.2.0
      
    - name: Actions Tagger
      uses: Actions-R-Us/actions-tagger@v2.0.1
    - name: Cache
      uses: actions/cache@v2.1.1
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: .
        # An explicit key for restoring and saving the cache
        key: files

        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    
    - name: Deploy to Heroku Using Docker
      # You may pin to the exact commit or the version.
      # uses: mtsmachado8/heroku-deploy@5bf18e5f6160beaccc01c678d0aaa81963434e74
      uses: mtsmachado8/heroku-deploy@v2.0.3
      with:
        # Email Linked to your Heroku Account
        email: praveenkr2208@gmail.com
        # Your Heroku API Key
        api_key: ${{ secrets.HEROKU_API_KEY }}
        # Your Heroku App Name
        app_name: algo-app-test
        # Dokerfile path
        dockerfile_path: Dockerfile
 
